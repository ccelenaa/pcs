version: '3.7'

services:

  nginx:
    privileged: true
    image: nginx:1.23.2-alpine
    ports:
      - "80:80"
      - "${NGINX_PORT:-443}:443"
    volumes:
      - ./docker/nginx:/etc/nginx/conf.d
      - ./docker/nginx/SSL/certs/rsa:/etc/nginx/ssl
      # - ./front-pcs/src/public:/var/www/pcs/public

  postgresql:
    privileged: true
    image: "postgres:15-alpine"
    environment:
      POSTGRES_DB:       "pcs"
      POSTGRES_USER:     "pcs"
      POSTGRES_PASSWORD: "pcs"
    ports:
      - "5432:5432"
    volumes:
      - ./docker/postgres/data:/var/lib/postgresql/data
      - ./docker/postgres/init-db:/docker-entrypoint-initdb.d

  api-pcs:
    image: docker.io/celenaaa/api-pcs:2.4.0
    restart: always
    volumes:
      - ./docker/api-pcs/config:/usr/lib/pcs/api-pcs/config
      - ./docker/api-pcs/public:/usr/lib/pcs/api-pcs/public
    ports:
      - "3000:80"
    environment:
      NODE_ENV: local
      DATABASE_URL: 'postgresql://pcs:pcs@postgresql:5432/pcs?schema=public'
    # env_file:
    # - ./docker/nest/config/development.yaml

  api-stripe:
    image: docker.io/celenaaa/api-stripe:1.3.0
    restart: always
    volumes:
      - ./docker/api-stripe/config:/usr/lib/pcs/api-stripe/config
    ports:
      - "3002:80"
    environment:
      NODE_ENV: local

  front-pcs:
    image: docker.io/celenaaa/front-pcs:2.1.0
    restart: always
    volumes:
      - ./docker/front-pcs/local.js:/usr/lib/pcs/front-pcs/public/env.js
    ports:
      - "3003:80"
    environment:
      NODE_ENV: local
