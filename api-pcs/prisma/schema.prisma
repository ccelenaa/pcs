generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model administrateur {
  id         BigInt    @id @default(autoincrement())
  name       String?   @db.VarChar(128)
  email      String    @db.VarChar(128)
  tel        String    @db.VarChar(32)
  login      String    @db.VarChar(32)
  password   String    @db.VarChar(512)
  locale     String    @default("fr-FR") @db.VarChar(32)
  data       Json      @default("{}")
  created_at DateTime  @default(now())
  updated_at DateTime  @default(now())
  deleted_at DateTime?
}

model bailleur {
  id           BigInt    @id @default(autoincrement())
  name         String?   @db.VarChar(128)
  email        String    @db.VarChar(128)
  login        String    @db.VarChar(32)
  password     String    @db.VarChar(512)
  locale       String    @default("fr-FR") @db.VarChar(32)
  data         Json      @default("{}")
  verified_at  DateTime?
  suspended_at DateTime?
  created_at   DateTime  @default(now())
  updated_at   DateTime  @default(now())
  deleted_at   DateTime?
  bien         bien[]
}

model bien {
  id           BigInt     @id @default(autoincrement())
  id_bailleur  BigInt
  type         String     @db.VarChar(64)
  area         String     @db.VarChar(255)
  description  String     @db.VarChar(255)
  status       String     @db.VarChar(64)
  price        String     @db.VarChar(32)
  currency     String     @default("eu") @db.VarChar(32)
  data         Json       @default("{}")
  validated_at DateTime?
  created_at   DateTime   @default(now())
  updated_at   DateTime   @default(now())
  deleted_at   DateTime?
  bailleur     bailleur   @relation(fields: [id_bailleur], references: [id], map: "bien_bailleur_id_fkey")
  location     location[]
  planing      planing[]
}

model langue {
  id         BigInt    @id @default(autoincrement())
  locale     String    @default("fr-FR") @db.VarChar(32)
  created_at DateTime  @default(now())
  updated_at DateTime  @default(now())
  deleted_at DateTime?
}

model location {
  id          BigInt    @id @default(autoincrement())
  id_bien     BigInt
  id_voyageur BigInt
  data        Json      @default("{}")
  price       String    @db.VarChar(32)
  price_total String    @db.VarChar(32)
  currency    String    @default("eu") @db.VarChar(32)
  start_at    DateTime  @default(now())
  end_at      DateTime  @default(now())
  created_at  DateTime  @default(now())
  updated_at  DateTime  @default(now())
  deleted_at  DateTime?
  bien        bien      @relation(fields: [id_bien], references: [id], map: "location_bien_id_fkey")
  voyageur    voyageur  @relation(fields: [id_voyageur], references: [id], map: "location_voyageur_id_fkey")
}

model photo {
  id         BigInt    @id @default(autoincrement())
  id_bien    BigInt
  url        String    @db.VarChar(32)
  created_at DateTime  @default(now())
  updated_at DateTime  @default(now())
  deleted_at DateTime?
}

model planing {
  id         BigInt    @id @default(autoincrement())
  id_bien    BigInt
  data       Json      @default("{}")
  status     String?   @db.VarChar(32)
  start_at   DateTime  @default(now())
  end_at     DateTime  @default(now())
  created_at DateTime  @default(now())
  updated_at DateTime  @default(now())
  deleted_at DateTime?
  bien       bien      @relation(fields: [id_bien], references: [id], map: "planing_bien_id_fkey")
}

model prestataire {
  id           BigInt    @id @default(autoincrement())
  name         String?   @db.VarChar(128)
  email        String    @db.VarChar(128)
  login        String    @db.VarChar(32)
  password     String    @db.VarChar(512)
  locale       String    @default("fr-FR") @db.VarChar(32)
  data         Json      @default("{}")
  verified_at  DateTime?
  suspended_at DateTime?
  created_at   DateTime  @default(now())
  updated_at   DateTime  @default(now())
  deleted_at   DateTime?
}

model voyageur {
  id           BigInt     @id @default(autoincrement())
  name         String?    @db.VarChar(128)
  email        String     @db.VarChar(128)
  tel          String     @db.VarChar(32)
  login        String     @db.VarChar(32)
  password     String     @db.VarChar(512)
  locale       String     @default("fr-FR") @db.VarChar(32)
  data         Json       @default("{}")
  verified_at  DateTime?
  suspended_at DateTime?
  created_at   DateTime   @default(now())
  updated_at   DateTime   @default(now())
  deleted_at   DateTime?
  location     location[]
}
